:integration: snmp
:plugin: snmptrap
:type: input
:default_codec: plain

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== SNMP trap input plugin

//Uncomment after generated the initial versions of the target file
//include::{include_path}/plugin_header-integration.asciidoc[]

==== Description

Read SNMP trap messages as events

Resulting `message` field resembles:
[source,ruby]
{"agent_addr"=>"192.168.1.40", "generic_trap"=>6, "specific_trap"=>15511, "enterprise"=>"1.3.6.1.2.1.1.1", "variable_bindings"=>{"1.3.6.1.2.1.1.2.0"=>"test one", "1.3.6.1.2.1.1.1.0"=>"test two"}, "type"=>"V1TRAP", "community"=>"public", "version"=>1, "timestamp"=>1500}


[id="plugins-{type}s-{plugin}-ecs"]
==== Event Metadata and the Elastic Common Schema (ECS)

When ECS <<plugins-{type}s-{plugin}-ecs_compatibility>> is enabled, this plugin adds SNMP trap metadata to each event. The value is stored in the @metadata where it can be used by other plugins in your pipeline.

Because SNMP data has specific field names based on OIDs, we recommend setting a <<plugins-{type}s-{plugin}-target>> field.

[cols="<l,<l,e,<e"]
|=======================================================================
|ECS disabled |ECS v1, v8    |Availability|Description
|[host]|[host][ip]|Always|IP address of the host e.g. "192.168.1.11"
| -|[@metadata][input][snmptrap][pdu][agent_addr]|`SNMPv1`|Network address of the object generating the trap
| -|[@metadata][input][snmptrap][pdu][community]|`SNMPv1` `SNMPv2c`|SNMP community
| -|[@metadata][input][snmptrap][pdu][enterprise]|`SNMPv1`|Type of object generating the trap
| -|[@metadata][input][snmptrap][pdu][error_index]|`SNMPv2c` `SNMPv3`|Provides additional information by identifying
which variable binding in the list caused the error
| -|[@metadata][input][snmptrap][pdu][error_status]|`SNMPv2c` `SNMPv3`|Error status code
| -|[@metadata][input][snmptrap][pdu][error_status_text]|`SNMPv2c` `SNMPv3`|Error status code description
| -|[@metadata][input][snmptrap][pdu][generic_trap]|`SNMPv1`|Generic trap type
| -|[@metadata][input][snmptrap][pdu][request_id]|`SNMPv2c` `SNMPv3`|Request ID
| -|[@metadata][input][snmptrap][pdu][specific_trap]|`SNMPv1`|Specific code, presented even if the generic_trap is not enterprise specific
| -|[@metadata][input][snmptrap][pdu][timestamp]|`SNMPv1`|Time elapsed between the last (re)initialization of the network entity and the generation of the trap
| -|[@metadata][input][snmptrap][pdu][type]|Always|PDU type
| -|[@metadata][input][snmptrap][pdu][variable_bindings]|Always|SNMP variable bindings values
| -|[@metadata][input][snmptrap][pdu][version]|Always|SNMP version
|=======================================================================

[id="plugins-{type}s-{plugin}-options"]
==== SNMP Trap Input Configuration Options

This plugin supports the following configuration options plus the <<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-community>> |<<array,array>>|No
| <<plugins-{type}s-{plugin}-ecs_compatibility>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-host>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-port>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-supported_transports>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-supported_versions>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-target>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-yamlmibdir>> |<<string,string>>|No
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
input plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-community"]
===== `community` 

  * Value type is <<array,array>>
  * Default value is `"public"`

SNMP Community String to listen for.

[id="plugins-{type}s-{plugin}-ecs_compatibility"]
===== `ecs_compatibility`

  * Value type is <<string,string>>
  * Supported values are:
    ** `disabled`: does not use ECS-compatible field names (fields might be set at the root of the event)
    ** `v1`, `v8`: avoids field names that might conflict with Elastic Common Schema (for example, the `host` field)
  * Default value depends on which version of Logstash is running:
   ** When Logstash provides a `pipeline.ecs_compatibility` setting, its value is used as the default
   ** Otherwise, the default value is `disabled`.

Controls this plugin's compatibility with the {ecs-ref}[Elastic Common Schema (ECS)].

[id="plugins-{type}s-{plugin}-host"]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"0.0.0.0"`

The address to listen on

[id="plugins-{type}s-{plugin}-port"]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `1062`

The port to listen on. Remember that ports less than 1024 (privileged
ports) may require root to use. hence the default of 1062.

[id="plugins-{type}s-{plugin}-supported_transports"]
===== `supported_transports`
  * Value type is <<string,string>>
  * Allowed values are: `tcp`, `udp`
  * Default value is `["udp"]`

The supported transport protocols to listen on.

SNMP was originally designed for use with UDP as transport protocol and is the official recommendation.
TCP is an optional transport mapping and can be enabled if needed. For more details
on SNMP over TCP, please refer to the https://datatracker.ietf.org/doc/html/rfc3430[RFC-3430].

[id="plugins-{type}s-{plugin}-supported_versions"]
===== `supported_versions`
  * Value type is <<string,string>>
  * Allowed values are: `1`, `2c`
  * Default value is `["1", "2c"]`

The supported SNMP protocol versions to listen on.
SNMP messages received, which version is unsupported/disabled, are automatically discarded.

[id="plugins-{type}s-{plugin}-target"]
===== `target`

  * Value type is <<string,string>>
  * There is no default value for this setting

The name of the field under which SNMP payloads are assigned.
If not specified data will be stored in the root of the event.

Setting a target is recommended when <<plugins-{type}s-{plugin}-ecs_compatibility>> is enabled.

[id="plugins-{type}s-{plugin}-yamlmibdir"]
===== `yamlmibdir` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

directory of YAML MIB maps  (same format ruby-snmp uses)



[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]

:default_codec!: